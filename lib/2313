###########################################################
################### Makefile Template #####################
# Modify the definitions belows according to              #
# your project requirements                               #
###########################################################

# object, should be edited for each programme
CCENV = fcu1104
BIN = RTComm
LIB_TARGET = librtcomm.a
CXX_MQTT = 0
CC_61850DEV = 0
CC_GOOSE = 0
CC_61850UP = 0
CC_MKLIB = 1 

# directory definitions
PRJ_DIR = $(shell pwd)
BIN_DIR = $(PRJ_DIR)/bin
LIB_DIR = $(PRJ_DIR)/lib
BLD_DIR = $(PRJ_DIR)/build
INC_DIR = $(PRJ_DIR)/inc
SRC_DIR_BIN = $(PRJ_DIR)/src_bin
SRC_GOOSE_DIR_BIN = $(PRJ_DIR)/goose
SRC_DIR_LIB = $(PRJ_DIR)/src_lib

# tools
SED  = sed
RM  = rm -rf
CP  = cp
MKDIR = mkdir -p
ECHO = echo
# targets
ifeq ($(BIN),)
BBIN = 
else
BBIN = $(BIN_DIR)/$(BIN)
endif

ifeq ($(LIB_TARGET),)
BLIB = 
else
BLIB = $(BIN_DIR)/$(LIB_TARGET)
endif


# compile tool
ifeq ($(CCENV), fcu1104)
CC = arm-linux-gnueabihf-gcc -march=armv7ve -mfpu=neon  -mfloat-abi=hard -mcpu=cortex-a7
AR = arm-linux-gnueabihf-ar
CFLAGS = -Werror
CFLAGS = -w 
CFLAGS   += -D__LINK_LIB__
LIBQBJ =
LFLAGS = ../comm_lib/lib/libcomm_lib.a 
ifeq ($(CC_61850DEV), 1)
CFLAGS += -D_WITH_61850DEV
LFLAGS += ./lib/librt61850_clnt_forlinx.a ./lib/libmms_forlinx.a ./lib/librt61850_clnt_forlinx.a ./lib/libmms_forlinx.a
endif
ifeq ($(CXX_MQTT), 1)
CFLAGS += -D_WITH_MQTT
LIBQBJ += ./lib/libpaho-mqtt3cs-fcu1104.a
LFLAGS += -L./lib -lssl-fcu1104 -lcrypto-fcu1104
BOOBJCPPS  += ./src_bin/protocol/mdl_mqtt_inferface.o
BOOBJCPPS  += ./src_bin/function/mqttmsg.o
endif
# directories
#SRC_DIRS_BIN = $(shell for /r $(SRC_DIR_BIN)  /d %%i in (*) do @echo %%i)
SRC_DIRS_BIN = $(shell ls -l $(SRC_DIR_BIN)| grep ^d | awk '{print $$9}')
# souce files and object files
#BIN_SRCS = $(shell for /r $(SRC_DIR_BIN) %%i in (*.c) do @echo %%i)
BIN_SRCS = $(wildcard $(SRC_DIRS_BIN)/*.c)
BIN_SRCS += $(wildcard $(SRC_DIR_BIN)/comtrade/*.c)
BIN_SRCS += $(wildcard $(SRC_DIR_BIN)/console/*.c)
BIN_SRCS += $(wildcard $(SRC_DIR_BIN)/function/*.c)
BIN_SRCS += $(wildcard $(SRC_DIR_BIN)/main/*.c)
BIN_SRCS += $(wildcard $(SRC_DIR_BIN)/protocol/*.c)
BIN_SRCS += $(wildcard $(SRC_DIR_BIN)/rdb/*.c)

BOOBJS   = $(addsuffix .o, $(basename ${BIN_SRCS}))

ifeq ($(CC_GOOSE), 1)
CFLAGS += -D_WITH_GOOSE -DOMAP_CPU_TYPE
ifeq ($(CC_61850DEV), 0)
BIN_GOOSE_SRCS = $(wildcard $(SRC_GOOSE_DIR_BIN)/ASN1/*.c)
endif
BIN_GOOSE_SRCS += $(wildcard $(SRC_GOOSE_DIR_BIN)/GOOSE/*.c)
BIN_GOOSE_SRCS += $(wildcard $(SRC_GOOSE_DIR_BIN)/GSELib/*.c)
BOOBJS_GOOSE   = $(addsuffix .o, $(basename ${BIN_GOOSE_SRCS}))
BIN_SRCS += $(BIN_GOOSE_SRCS)
BOOBJS += $(BOOBJS_GOOSE)
endif
else ifeq ($(CCENV), fcu2601)
CC = aarch64-linux-gcc  -I../inc
AR = aarch64-linux-ar
#CFLAGS = -Werror -D_FORLINX_PLF
CFLAGS = -w  -D_FORLINX_PLF -D_SOCKET_CAN_LIB_
LIBQBJ =
LFLAGS = ../comm_lib/lib/libcomm_lib.a 

# directories
#SRC_DIRS_BIN = $(shell for /r $(SRC_DIR_BIN)  /d %%i in (*) do @echo %%i)
SRC_DIRS_BIN = $(shell ls -l $(SRC_DIR_BIN)| grep ^d | awk '{print $$9}')
# souce files and object files
#BIN_SRCS = $(shell for /r $(SRC_DIR_BIN) %%i in (*.c) do @echo %%i)
BIN_SRCS = $(wildcard $(SRC_DIRS_BIN)/*.c)
BIN_SRCS += $(wildcard $(SRC_DIR_BIN)/comtrade/*.c)
BIN_SRCS += $(wildcard $(SRC_DIR_BIN)/console/*.c)
BIN_SRCS += $(wildcard $(SRC_DIR_BIN)/function/*.c)
BIN_SRCS += $(wildcard $(SRC_DIR_BIN)/main/*.c)
BIN_SRCS += $(wildcard $(SRC_DIR_BIN)/protocol/*.c)
BIN_SRCS += $(wildcard $(SRC_DIR_BIN)/rdb/*.c)

BOOBJS   = $(addsuffix .o, $(basename ${BIN_SRCS}))

ifeq ($(CC_GOOSE), 1)
CFLAGS += -D_WITH_GOOSE -DOMAP_CPU_TYPE
ifeq ($(CC_61850DEV), 0)
BIN_GOOSE_SRCS = $(wildcard $(SRC_GOOSE_DIR_BIN)/ASN1/*.c)
endif
BIN_GOOSE_SRCS += $(wildcard $(SRC_GOOSE_DIR_BIN)/GOOSE/*.c)
BIN_GOOSE_SRCS += $(wildcard $(SRC_GOOSE_DIR_BIN)/GSELib/*.c)
BOOBJS_GOOSE   = $(addsuffix .o, $(basename ${BIN_GOOSE_SRCS}))
BIN_SRCS += $(BIN_GOOSE_SRCS)
BOOBJS += $(BOOBJS_GOOSE)
endif

ifeq ($(CC_61850UP), 1)
CFLAGS += -D_WITH_61850UP -DOMAP_CPU_TYPE
BOOBJS_GOOSE   = $(addsuffix .o, $(basename ${BIN_UP61850_SRCS}))
BOOBJS += $(BOOBJS_UP61850)
endif
ifeq ($(CC_61850DEV), 1)
CFLAGS += -D_WITH_61850DEV
LFLAGS += -L./lib -lrt61850_clnt_rk356x -lmms_2601 -lrt61850_clnt_rk356x -lmms_2601
endif
else ifeq ($(CCENV), MT6816)
CC = mipsel-openwrt-linux-gcc
AR = mipsel-openwrt-linux-ar

CFLAGS = -w -D_MT6816
LIBQBJ =
LFLAGS = ../comm_lib/lib/libcomm_lib.a 
# directories
#SRC_DIRS_BIN = $(shell for /r $(SRC_DIR_BIN)  /d %%i in (*) do @echo %%i)
SRC_DIRS_BIN = $(shell ls -l $(SRC_DIR_BIN)| grep ^d | awk '{print $$9}')
# souce files and object files
#BIN_SRCS = $(shell for /r $(SRC_DIR_BIN) %%i in (*.c) do @echo %%i)
BIN_SRCS = $(wildcard $(SRC_DIRS_BIN)/*.c)
BIN_SRCS += $(wildcard $(SRC_DIR_BIN)/comtrade/*.c)
BIN_SRCS += $(wildcard $(SRC_DIR_BIN)/console/*.c)
BIN_SRCS += $(wildcard $(SRC_DIR_BIN)/function/*.c)
BIN_SRCS += $(wildcard $(SRC_DIR_BIN)/main/*.c)
BIN_SRCS += $(wildcard $(SRC_DIR_BIN)/protocol/*.c)
BIN_SRCS += $(wildcard $(SRC_DIR_BIN)/rdb/*.c)

BOOBJS   = $(addsuffix .o, $(basename ${BIN_SRCS}))
else
GCCDIR   = C:\Xilinx\SDK\2015.2\gnu\arm\nt\bin
PREX     = $(GCCDIR)/arm-xilinx-linux-gnueabi
AR       = $(PREX)-ar
CC       = $(PREX)-gcc
CXX       = $(PREX)-g++
CFLAGS =  
LIBQBJ = 
LFLAGS = -lcomm_lib -L../comm_lib/lib  

# directories
SRC_DIRS_BIN = $(shell for /r $(SRC_DIR_BIN)  /d %%i in (*) do @echo %%i)
# souce files and object files
BIN_SRCS = $(shell for /r $(SRC_DIR_BIN) %%i in (*.c) do @echo %%i)
BOOBJS   = $(addsuffix .o, $(basename ${BIN_SRCS}))
ifeq ($(CXX_MQTT), 1)
CFLAGS += -D_WITH_MQTT
LIBQBJ += ./lib/libpaho-mqtt3cs.a
LFLAGS += -L./lib -lssl -lcrypto 
BIN_SRCPPS += $(shell for /r $(SRC_DIR_BIN) %%i in (*.cpp) do @echo %%i)
BOOBJCPPS  = $(addsuffix .o, $(basename ${BIN_SRCPPS}))
endif

endif


# include flags
INCFLAGS = -I$(GLBINCDIR) -I$(LINUX_INCLUDE) -I../comm_lib/inc -I./include  -I./src_bin -I../rtpd.sys.src/sys-inc -I../rtpd.sys.src/common_mpc5200/include

###########################################################
########## Do not modify belows if not necessary ##########
###########################################################

# make rules

# default flags
INCFLAGS += -I. -I$(SRC_DIR_BIN) -I$(SRC_DIR_LIB) -I$(INC_DIR) 
ifeq ($(CXX_MQTT), 1)
INCFLAGS += -I./include/paho
endif
ifeq ($(CC_GOOSE), 1)
INCFLAGS += -I./goose/include  -I./goose/include/asn1 -I./goose/include/gse -I./goose/GOOSE
endif
ifeq ($(CC_61850UP), 1)
INCFLAGS += -I./comm61850-up
endif
#CFLAGS   += -O2 -fno-strict-aliasing -Wall -DLINUX $(INCFLAGS) 
CFLAGS   += -g -O0 -fno-strict-aliasing -Wall -DLINUX $(INCFLAGS)
ifeq ($(CC_MKLIB), 1)
CFLAGS   += -D__LINK_LIB__
endif
LFLAGS   += -lpthread -lrt -lm
.PHONY:	clean  print_var

# targets

TARGET: $(BLIB)
	@$(ECHO) Complete building $(BLIB)
$(BLIB): $(BOOBJS)
	$(AR)  cr $@ $^
$(BLD_DIR)/%.o: %.c 
	@$(ECHO) compiling $<
	$(CC) $(CFLAGS) -c $< -o $@


clean:
	@$(ECHO) $(RM) *.o
	@$(RM) $(BOOBJS) $(BOOBJCPPS)
	@$(ECHO) $(RM) $(BIN_DIR)/$(BIN) $(BLIB)
	@$(RM) $(BIN_DIR)/*

print_var:
	@$(ECHO) bin srcs: $(BOOBJS)
